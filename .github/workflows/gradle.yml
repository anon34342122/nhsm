# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        java: [ '17' ]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Give permissions to gradlew
      run: chmod +x ./gradlew

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'microsoft'
        cache: 'gradle'

    # Set the JDk variable
    - name: Set the required JDK variable
      run: |
        echo "ORG_GRADLE_PROJECT_jdk17=${JAVA_HOME}" >> $GITHUB_ENV

    - name: Echo JAVA_HOME
      run: echo $JAVA_HOME

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build

    - name: Print log4j2 file
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-logs-${{ matrix.java }}-${{ matrix.os }}
        path: ./logs/

    - name: Verify Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Execute build
      run: ./gradlew --info --stacktrace build

    - name: Execute jlink
      run: ./gradlew --info --stacktrace jlink

    - name: Execute jpackage
      run: ./gradlew --info --stacktrace jpackage

    - name: Upload build as an artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: NHSM-${{ matrix.java }}-${{ matrix.os }}
        path: ./build/jpackage/NHSM_*

    - name: Upload DMG as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: hellofx-jdk${{ matrix.java }}-${{ matrix.os }}-dmg
        path: build/jpackage/*.dmg

    - name: Upload EXE as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: hellofx-jdk${{ matrix.java }}-${{ matrix.os }}-exe
        path: build/jpackage/*.exe

    - name: Upload MSI as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: hellofx-jdk${{ matrix.java }}-${{ matrix.os }}-msi
        path: build/jpackage/*.msi

    - name: Upload DEB as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: hellofx-jdk${{ matrix.java }}-${{ matrix.os }}-deb
        path: build/jpackage/*.deb

    - name: Upload RPM as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: hellofx-jdk${{ matrix.java }}-${{ matrix.os }}-rpm
        path: build/jpackage/*.rpm