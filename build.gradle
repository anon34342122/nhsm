plugins {
    id 'idea'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.anon'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.anon.nhsm'
    mainClass = 'com.anon.nhsm.Main'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.semver4j:semver4j:3.1.0')
    implementation('com.google.code.gson:gson:2.10')
    implementation('commons-io:commons-io:2.11.0')
    implementation('org.apache.logging.log4j:log4j-api:2.19.0')
    implementation('org.apache.logging.log4j:log4j-core:2.19.0')
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    forceMerge('log4j-api' )
    forceMerge('log4j-core' )
    launcher {
        name = 'NHSM'
        jvmArgs = ['-Dlog4j.configurationFile=./runtime/bin/log4j2.xml']
    }
    mergedModule {
        additive = true
        uses 'org.apache.logging.log4j.util.PropertySource';
        uses 'org.apache.logging.log4j.core.util.ContextDataProvider';
        uses 'org.apache.logging.log4j.core.util.WatchEventService';
        uses 'org.apache.logging.log4j.spi.Provider';
        uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory';
    }
    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            imageOptions = ['--icon', 'src/main/resources/com/anon/nhsm/app.ico']
        }
        skipInstaller = true
        appVersion = "0.0.1"
    }
}

tasks.jlink.doLast {
    copy {
        from('src/main/resources') {
            include "log4j2.xml"
        }
        into("$buildDir/image/bin")
    }
}

jlinkZip {
    group = 'distribution'
}